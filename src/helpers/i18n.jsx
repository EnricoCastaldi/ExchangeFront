// i18n.jsx
import { createContext, useContext, useEffect, useMemo, useState } from "react";

const T = {
  pl: {
    locale: "pl-PL",
    brand: "Exchange",
    navbar: { demo: "Tryb demo", logout: "Wyloguj" },
    sidebarSections: {
      CORE: "Główne",
      DATA: "Dane",
      TRADING: "Transakcje",
      ADMIN: "Administracja",
    },
    menu: {
      EXCHANGE: "WYMIANA",
      CUSTOMERS: "KLIENCI",
      ITEM: "PRODUKTY (ZBOŻA)",
      VENDORS: "DOSTAWCY",
      BUY: "ZAKUP",
      SELL: "SPRZEDAŻ",
      USERS: "UŻYTKOWNICY",
      PARAMETERS: "PARAMETRY",
    },
    buy: {
      controls: {
        searchPlaceholder: "Szukaj: dostawca, produkt, SKU, opis",
        allStatuses: "Wszystkie statusy",
        statuses: {
          open: "Otwarte",
          approved: "Zatwierdzone",
          rejected: "Odrzucone",
          closed: "Zamknięte",
        },
        searchBtn: "Szukaj",
        newBtn: "Nowe zapytanie zakupowe",
        perPage: (n) => `${n} / stronę`,
        prev: "Wstecz",
        next: "Dalej",
      },
      table: {
        id: "ID",
        vendor: "Dostawca",
        item: "Produkt",
        type: "Typ",
        qty: "Ilość (t)",
        price: "Cena / t",
        status: "Status",
        created: "Utworzono",
        description: "Opis",
        actions: "",
        loading: "Ładowanie...",
        empty: "Brak zapytań zakupowych",
        typeMap: { spot: "spot", forward: "forward", tender: "przetarg" },
      },
      modal: {
        title: "Zapytanie zakupowe",
        cancel: "Anuluj",
        save: "Zapisz zmiany",
        create: "Utwórz zapytanie",
        fields: {
          vendor: "Dostawca *",
          vendorPlaceholder: "Wybierz dostawcę…",
          item: "Produkt *",
          itemPlaceholder: "Wybierz produkt…",
          type: "Typ",
          quantity: "Ilość (t)",
          price: "Cena za tonę (USD)",
          status: "Status",
          description: "Opis",
        },
        statuses: {
          open: "otwarte",
          approved: "zatwierdzone",
          rejected: "odrzucone",
          closed: "zamknięte",
        },
        types: { spot: "spot", forward: "forward", tender: "przetarg" },
      },
      alerts: {
        deleteConfirm: "Usunąć to zapytanie?",
        requestFailed: "Żądanie nie powiodło się",
        selectVendor: "Wybierz dostawcę",
        selectItem: "Wybierz produkt",
        typeRequired: "Wymagany typ",
      },
      paginationMeta: (total, page, pages) =>
        `Razem: ${total} • Strona ${page} z ${pages || 1}`,
    },
    customers: {
      controls: {
        searchPlaceholder: "Szukaj: nazwa, e-mail, kraj, miasto",
        countryPlaceholder: "Kod kraju",
        regionPlaceholder: "Region",
        searchBtn: "Szukaj",
        addBtn: "Dodaj klienta",
        allStatuses: "Wszystko",
        clear: "Wyczyść",
        filters: "Filtry",
      },
      table: {
        no: "Nr",
        name: "Nazwa",
        email: "E-mail",
        phone: "Telefon",
        country: "Kraj",
        city: "Miasto",
        customerType: "Typ klienta",
        blocked: "Blokada",
        creditLimit: "Limit kredytowy",
        created: "Utworzono",
        actions: "Akcje",
        loading: "Ładowanie…",
        empty: "Brak klientów",
        dash: "—",
      },
      blockedLabels: {
        none: "OK",
        ship: "WYSYŁKA",
        invoice: "FAKTURA",
        all: "WSZYSTKO",
      },
      alerts: {
        loadFail: "Nie udało się wczytać klientów.",
        deleteConfirm: "Usunąć tego klienta?",
        deleted: "Klient został usunięty.",
        requestFail: "Żądanie nie powiodło się.",
        updated: "Zapisano zmiany klienta.",
        created: "Utworzono klienta.",
        fixErrors: "Popraw zaznaczone pola.",
      },
      footer: {
        meta: (total, page, pages) =>
          `Razem: ${total} • Strona ${page} z ${pages || 1}`,
        perPage: (n) => `${n} / stronę`,
        prev: "Wstecz",
        next: "Dalej",
      },
      modal: {
        title: "Klient",
        cancel: "Anuluj",
        save: "Zapisz zmiany",
        add: "Utwórz klienta",
        tabs: {
          basics: "Podstawowe",
          address: "Adres",
          contact: "Kontakt",
          finance: "Finanse i kody",
          picture: "Zdjęcie",
        },
        fields: {
          no: "Nr",
          name: "Nazwa",
          name2: "Nazwa 2",
          blocked: "Blokada",
          address: "Adres",
          address2: "Adres 2",
          city: "Miasto",
          postCode: "Kod pocztowy",
          region: "Region",
          countryRegionCode: "Kod kraju/regionu",
          phoneNo: "Telefon",
          email: "E-mail",
          email2: "E-mail 2",
          homePage: "Strona WWW",
          billToCustomerNo: "Nr płatnika",
          nip: "NIP",
          creditLimit: "Limit kredytowy",
          currencyCode: "Waluta",
          priority: "Priorytet",
          paymentMethodCode: "Metoda płatności",
          paymentTermsCode: "Warunki płatności",
          languageCode: "Język",
          customerPostingGroup: "Grupa księgowa",
          customerPriceGroup: "Grupa cenowa",
          customerDiscGroup: "Grupa rabatowa",
          salespersonCode: "Przedstawiciel",
          shipmentMethodCode: "Sposób wysyłki",
          shippingAgentCode: "Przewoźnik",
          picture: "Zdjęcie",
          customerType: "Typ klienta",
        },
      },
      a11y: {
        toggleDetails: "Pokaż/ukryj szczegóły",
        sort: "Sortuj",
        remove: "Usuń",
        undoRemove: "Cofnij usunięcie",
        replacePicture: "Zmień zdjęcie",
        choosePicture: "Wybierz zdjęcie",
        clearSelection: "Wyczyść wybór",
        newFileSelected: "Wybrano nowy plik",
      },
      details: {
        name2: "Nazwa 2",
        address: "Adres",
        address2: "Adres 2",
        postCode: "Kod pocztowy",
        region: "Region",
        nip: "NIP",
        email2: "E-mail 2",
        homePage: "Strona WWW",
        billToCustomerNo: "Nr płatnika",
        currencyCode: "Waluta",
        priority: "Priorytet",
        paymentMethodCode: "Metoda płatności",
        paymentTermsCode: "Warunki płatności",
        languageCode: "Język",
        customerPostingGroup: "Grupa księgowa",
        customerPriceGroup: "Grupa cenowa",
        customerDiscGroup: "Grupa rabatowa",
        salespersonCode: "Przedstawiciel",
        shipmentMethodCode: "Sposób wysyłki",
        shippingAgentCode: "Przewoźnik",
        picture: "Zdjęcie",
        noPicture: "Brak zdjęcia",
        customerType: "Typ klienta",
      },
      customerTypeLabels: {
        mlyn: "Młyn",
        skup: "Skup",
        trader: "Trader",
        wytwornia_pasz: "Wytwórnia Pasz",
      },
      
    },

    exchange: {
      topbar: {
        lastUpdate: "Ostatnia aktualizacja",
        nextIn: "Następne odświeżenie za",
        refreshNowTitle: "Odśwież teraz",
        refresh: "Odśwież",
        loading: "Ładowanie…",
      },
      columns: {
        buyTitle: "Zapytania ZAKUPU",
        sellTitle: "Zapytania SPRZEDAŻY",
        searchPlaceholderBuy: "Szukaj: dostawca, produkt, SKU",
        searchPlaceholderSell: "Szukaj: klient, produkt, SKU",
        allStatuses: "Wszystkie statusy",
        statuses: {
          open: "Otwarte",
          approved: "Zatwierdzone",
          rejected: "Odrzucone",
          closed: "Zamknięte",
        },
        allItems: "Wszystkie produkty",
        searchBtn: "Szukaj",
        refreshBtn: "Odśwież",
        headers: {
          id: "ID",
          partyBuy: "Dostawca",
          partySell: "Klient",
          item: "Produkt",
          type: "Typ",
          qty: "Ilość (t)",
          price: "Cena / t",
          status: "Status",
          created: "Utworzono",
        },
        empty: "Brak wyników",
        footer: {
          meta: (total, page, pages) =>
            `Razem: ${total} • Strona ${page} z ${pages || 1}`,
          perPage: (n) => `${n} / stronę`,
          prev: "Wstecz",
          next: "Dalej",
        },
      },
      stats: { count: "Liczba", qty: "Ilość (t)", notional: "Wartość" },
    },
    items: {
      pageTitle: "Produkty",
      controls: {
        searchPlaceholder: "Szukaj: Nr, opis, UoM, grupa księgowa",
        searchBtn: "Szukaj",
        addBtn: "Dodaj produkt",
        filters: "Filtry",
        allTypes: "Wszystkie typy",
        allStatuses: "Wszystkie statusy",
        statuses: { active: "Aktywny", inactive: "Nieaktywny" },
      },
      table: {
        no: "Nr",
        no2: "Nr 2",
        type: "Typ",
        description: "Opis",
        unit: "Jedn. bazowa",
        ipg: "Grupa księgowa zapasów",
        unitPrice: "Cena jednostkowa",
        status: "Status",
        created: "Utworzono",
        actions: "",
        loading: "Ładowanie…",
        empty: "Brak produktów",
        dash: "—",
      },
      details: {
        id: "ID",
        no: "Nr",
        no2: "Nr 2",
        type: "Typ",
        description: "Opis",
        description2: "Opis 2",
        baseUnitOfMeasure: "Jednostka bazowa",
        inventoryPostingGroup: "Grupa księgowa zapasów",
        unitPrice: "Cena jednostkowa",
        active: "Aktywny",
        created: "Utworzono",
        updated: "Zaktualizowano",
      },
      footer: {
        meta: (total, page, pages) =>
          `Razem: ${total} • Strona ${page} z ${pages || 1}`,
        perPage: (n) => `${n} / stronę`,
        prev: "Wstecz",
        next: "Dalej",
      },
      modal: {
        titleNew: "Dodaj produkt",
        titleEdit: "Edytuj produkt",
        cancel: "Anuluj",
        save: "Zapisz zmiany",
        add: "Dodaj produkt",
        fields: {
          no: "Nr *",
          no2: "Nr 2",
          type: "Typ",
          description: "Opis",
          description2: "Opis 2",
          unit: "Jednostka bazowa",
          ipg: "Grupa księgowa zapasów",
          unitPrice: "Cena jednostkowa",
          active: "Status",
        },
        required: "Uzupełnij wymagane pola.",
      },
      alerts: {
        loadFail: "Nie udało się wczytać produktów.",
        deleteConfirm: "Usunąć ten produkt?",
        deleted: "Produkt został usunięty.",
        requestFail: "Żądanie nie powiodło się.",
        created: "Utworzono produkt.",
        updated: "Zaktualizowano produkt.",
      },
      a11y: { toggleDetails: "Pokaż/ukryj szczegóły" },
    },
    parameters: {
      pageTitle: "Parametry",
      controls: {
        searchPlaceholder: "Szukaj: kod, opis, typ",
        searchBtn: "Szukaj",
        addBtn: "Dodaj parametr",
        filters: "Filtry",
        allTypes: "Wszystkie typy",
        allStatuses: "Wszystkie statusy",
        statuses: { active: "Aktywny", inactive: "Nieaktywny" },
        types: { text: "tekst", decimal: "liczba", boolean: "logiczny" },
      },
      table: {
        code: "Kod parametru",
        description: "Opis",
        type: "Typ",
        minValue: "Wartość min",
        maxValue: "Wartość max",
        defaultValue: "Wartość domyślna",
        status: "Status",
        created: "Utworzono",
        actions: "",
        loading: "Ładowanie…",
        empty: "Brak parametrów",
        dash: "—",
      },
      details: {
        id: "ID",
        code: "Kod parametru",
        description: "Opis",
        type: "Typ",
        min: "Wartość minimalna",
        max: "Wartość maksymalna",
        defaultValue: "Wartość domyślna",
        active: "Aktywny",
        created: "Utworzono",
        updated: "Zaktualizowano",
      },
      modal: {
        titleNew: "Dodaj parametr",
        titleEdit: "Edytuj parametr",
        cancel: "Anuluj",
        save: "Zapisz zmiany",
        add: "Dodaj parametr",
        fields: {
          code: "Kod parametru *",
          description: "Opis",
          type: "Typ parametru",
          min: "Wartość minimalna (liczba)",
          max: "Wartość maksymalna (liczba)",
          defaultValue: "Wartość domyślna",
          active: "Status",
        },
        required: "Uzupełnij wymagane pola.",
      },
      alerts: {
        loadFail: "Nie udało się wczytać parametrów.",
        deleteConfirm: "Usunąć ten parametr?",
        deleted: "Parametr został usunięty.",
        requestFail: "Żądanie nie powiodło się.",
        created: "Utworzono parametr.",
        updated: "Zaktualizowano parametr.",
        codeRequired: "Kod parametru jest wymagany.",
      },
      footer: {
        meta: (total, page, pages) =>
          `Razem: ${total} • Strona ${page} z ${pages || 1}`,
        perPage: (n) => `${n} / stronę`,
        prev: "Wstecz",
        next: "Dalej",
      },
      a11y: { toggleDetails: "Pokaż/ukryj szczegóły" },
    },

    vendors: {
      controls: {
        searchPlaceholder: "Szukaj: nazwa, kontakt, email, miasto",
        countryPlaceholder: "Kod kraju",
        regionPlaceholder: "Region",
        allStatuses: "Wszystkie statusy",
        rrAll: "Wszyscy dostawcy",
        rrOnly: "Tylko RR",
        rrExclude: "Bez RR",
        filters: "Filtry",
        searchBtn: "Szukaj",
        addBtn: "Dodaj dostawcę",
      },
      table: {
        no: "Nr",
        name: "Nazwa",
        email: "Email",
        phone: "Telefon",
        country: "Kraj",
        city: "Miasto",
        blocked: "Blokada",
        creditLimit: "Limit kredytowy",
        created: "Utworzono",
        actions: "",
        loading: "Ładowanie…",
        empty: "Brak dostawców",
      },
      blockedLabels: {
        none: "OK",
        ship: "WYSYŁKA",
        invoice: "FAKTURA",
        all: "WSZYSTKO",
      },
      chips: {
        rrOnly: "Tylko RR",
        rrExclude: "Bez RR",
      },
      footer: {
        meta: (total, page, pages) =>
          `Razem: ${total} • Strona ${page} z ${pages || 1}`,
        perPage: (n) => `${n} / stronę`,
        prev: "Wstecz",
        next: "Dalej",
      },
      details: {
        name2: "Nazwa 2",
        address: "Adres",
        address2: "Adres 2",
        postCode: "Kod pocztowy",
        region: "Region",
        nip: "NIP",
        email2: "Email 2",
        homePage: "Strona WWW",
        currencyCode: "Waluta",
        priority: "Priorytet",
        paymentMethodCode: "Metoda płatności",
        paymentTermsCode: "Warunki płatności",
        languageCode: "Język",
        vendorPostingGroup: "Grupa księgowa",
        vendorPriceGroup: "Grupa cenowa",
        vendorDiscGroup: "Grupa rabatowa",
        purchaserCode: "Kupiec",
        shipmentMethodCode: "Sposób wysyłki",
        shippingAgentCode: "Przewoźnik",
        rr: "RR",
        picture: "Zdjęcie",
        noPicture: "Brak zdjęcia",
      },
      modal: {
        title: "Dostawca",
        cancel: "Anuluj",
        save: "Zapisz zmiany",
        add: "Dodaj dostawcę",
        tabs: {
          basics: "Podstawowe",
          address: "Adres",
          contact: "Kontakt",
          finance: "Finanse i kody",
          picture: "Zdjęcie",
        },
        fields: {
          no: "Nr",
          name: "Nazwa *",
          name2: "Nazwa 2",
          blocked: "Blokada",
          rr: "RR",
          address: "Adres",
          address2: "Adres 2",
          city: "Miasto",
          postCode: "Kod pocztowy",
          region: "Region",
          countryRegionCode: "Kod kraju/regionu",
          phoneNo: "Telefon",
          email: "Email",
          email2: "Email 2",
          homePage: "Strona WWW",
          nip: "NIP",
          creditLimit: "Limit kredytowy",
          currencyCode: "Waluta",
          priority: "Priorytet",
          paymentMethodCode: "Metoda płatności",
          paymentTermsCode: "Warunki płatności",
          languageCode: "Język",
          vendorPostingGroup: "Grupa księgowa",
          vendorPriceGroup: "Grupa cenowa",
          vendorDiscGroup: "Grupa rabatowa",
          purchaserCode: "Kupiec",
          shipmentMethodCode: "Sposób wysyłki",
          shippingAgentCode: "Przewoźnik",
          picture: "Zdjęcie",
        },
      },
      alerts: {
        loadFail: "Nie udało się wczytać dostawców.",
        deleteConfirm: "Usunąć tego dostawcę?",
        deleted: "Dostawca został usunięty.",
        requestFail: "Żądanie nie powiodło się.",
        updated: "Zapisano zmiany dostawcy.",
        created: "Utworzono dostawcę.",
        fixErrors: "Popraw zaznaczone pola.",
      },
      labels: { yes: "Tak", no: "Nie" },
    },

sells: {
  locale: "pl-PL",
  title: "Dokumenty sprzedaży",
  searchPh: "Szukaj: nr, klient, lokalizacja, broker…",
  addBtn: "Nowy dokument",
  filters: "Filtry",
  all: "Wszystkie statusy",
  status: "Status",
  documentNo: "Nr dokumentu",
  externalDocumentNo: "Nr dokumentu zewn.",
  info: "Informacje o dokumencie",
  documentDate: "Data dokumentu",
  dueDate: "Termin płatności",
  currency: "Waluta",
  currencyFactor: "Współczynnik waluty",
  sellTo: "Sprzedaj-do",
  billTo: "Płatnik (Bill-to)",
  location: "Lokalizacja",
  shipment: "Wysyłka",
  transport: "Transport",
  broker: "Broker",
  created: "Utworzono",
  actions: "Akcje",
  loading: "Ładowanie…",
  empty: "Brak dokumentów",
  requestFail: "Żądanie nie powiodło się",
  deleted: "Dokument usunięty.",
  deleteConfirm: "Usunąć ten dokument?",

  footer: {
    meta: (total, page, pages) => `Razem: ${total} • Strona ${page} z ${pages || 1}`,
    perPage: (n) => `${n} / stronę`,
    prev: "Wstecz",
    next: "Dalej",
  },

  statusMap: {
    new: "Nowy",
    "on-hold": "Wstrzymany",
    accepted: "Zaakceptowany",
    approved: "Zatwierdzony",
    matched: "Sparowany",
    shipped: "Wysłany",
    invoiced: "Zafakturowany",
    paid: "Zapłacony (Zamknięty)",
    canceled: "Anulowany",
  },

  // Szczegóły w wierszu (panel rozkładany)
  kv: {
    // nagłówek
    externalDocumentNo: "Nr dokumentu zewn.",
    documentInfo: "Informacje o dokumencie",
    createdBy: "Utworzył",
    createdAt: "Utworzono",
    modifiedBy: "Zmodyfikował",
    modifiedAt: "Zmodyfikowano",
    currency: "Waluta",
    documentDate: "Data dokumentu",
    serviceDate: "Data usługi/dostawy",
    requestedDeliveryDate: "Żądana dostawa",
    promisedDeliveryDate: "Obiecana dostawa",
    shipmentDate: "Data wysyłki",
    dueDate: "Termin płatności",

    // pola wspólne
    no: "Nr",
    name: "Nazwa",
    name2: "Nazwa 2",
    address: "Adres",
    address2: "Adres 2",
    city: "Miasto",
    region: "Region",
    postCode: "Kod pocztowy",
    country: "Kraj",
    email: "E-mail",
    phone: "Telefon",
    nip: "NIP",

    // wysyłka
    method: "Metoda",
    agent: "Agent",

    // transport
    transportNo: "Nr transportu",
    transportName: "Nazwa transportu",
    transportId: "ID transportu",
    driverName: "Kierowca",
    driverId: "ID kierowcy",
    driverEmail: "E-mail kierowcy",
    driverPhone: "Telefon kierowcy",

    // broker
    brokerNo: "Nr brokera",
  },

  modal: {
    titleNew: "Nowy dokument",
    titleEdit: "Edytuj dokument",
    cancel: "Anuluj",
    save: "Zapisz zmiany",
    add: "Utwórz dokument",
  },

  alerts: {
    fixErrors: "Popraw zaznaczone pola.",
  },

  form: {
    tabs: {
      header: "Nagłówek",
      sell: "Sprzedaj-do",
      bill: "Płatnik (Bill-to)",
      location: "Lokalizacja",
      shipment: "Wysyłka",
      transport: "Transport",
      broker: "Broker",
    },
    fields: {
      documentNo: "Nr dokumentu *",
      status: "Status",
      externalDocumentNo: "Nr dokumentu zewn.",
      documentInfo: "Informacje o dokumencie",
      currencyCode: "Waluta",
      currencyFactor: "Współczynnik waluty",
      documentDate: "Data dokumentu",
      serviceDate: "Data usługi/dostawy",
      requestedDeliveryDate: "Żądana dostawa",
      promisedDeliveryDate: "Obiecana dostawa",
      shipmentDate: "Data wysyłki",
      validityDate: "Ważny do",
      dueDate: "Termin płatności",

      pickSell: "Wybierz Sprzedaj-do *",
      pickBill: "Wybierz Płatnika *",
      no: "Nr",
      name: "Nazwa",
      name2: "Nazwa 2",
      email: "E-mail",
      phone: "Telefon",
      address: "Adres",
      address2: "Adres 2",
      city: "Miasto",
      region: "Region",
      postCode: "Kod pocztowy",
      country: "Kraj",
      nip: "NIP",

      shipmentMethod: "Metoda wysyłki",
      shipmentAgent: "Agent wysyłki",

      transportNo: "Nr transportu",
      transportName: "Nazwa transportu",
      transportId: "ID transportu",
      driverName: "Kierowca",
      driverId: "ID kierowcy",
      driverEmail: "E-mail kierowcy",
      driverPhone: "Telefon kierowcy",

      brokerNo: "Nr brokera",
    },
  },
},


    users: {
      controls: {
        searchPlaceholder: "Szukaj: nazwa, kod, email, telefon, region",
        allStatuses: "Wszystkie statusy",
        statuses: {
          active: "Aktywny",
          suspended: "Zawieszony",
          closed: "Zamknięty",
        },
        searchBtn: "Szukaj",
        addBtn: "Dodaj użytkownika",
        filters: "Filtry",
      },
      table: {
        code: "Kod",
        name: "Nazwa",
        email: "Email",
        phone: "Telefon",
        region: "Region",
        jobTitle: "Stanowisko",
        permission: "Uprawnienia",
        commission: "Prowizja",
        status: "Status",
        created: "Utworzono",
        actions: "",
        loading: "Ładowanie...",
        empty: "Brak użytkowników",
        dash: "—",
      },
      footer: {
        meta: (total, page, pages) =>
          `Razem: ${total} • Strona ${page} z ${pages || 1}`,
        perPage: (n) => `${n} / stronę`,
        prev: "Wstecz",
        next: "Dalej",
      },
      modal: {
        title: "Użytkownik",
        cancel: "Anuluj",
        save: "Zapisz zmiany",
        add: "Utwórz użytkownika",
        fields: {
          code: "Kod *",
          name: "Nazwa *",
          email: "Email *",
          password: "Hasło *",
          newPassword: "Nowe hasło (opcjonalnie)",
          phone: "Telefon",
          commission: "Prowizja",
          region: "Region",
          jobTitle: "Stanowisko",
          permission: "Poziom uprawnień",
          status: "Status",
        },
      },
      alerts: {
        deleteConfirm: "Usunąć tego użytkownika?",
        required:
          "Kod, nazwa, email i hasło (dla nowego użytkownika) są wymagane",
        loadFail: "Nie udało się wczytać użytkowników.",
        requestFail: "Żądanie nie powiodło się.",
        created: "Utworzono użytkownika.",
        updated: "Zaktualizowano użytkownika.",
        deleted: "Usunięto użytkownika.",
      },
      details: {
        id: "ID",
        phone: "Telefon",
        region: "Region",
        jobTitle: "Stanowisko",
        permission: "Uprawnienia",
        commission: "Prowizja",
        status: "Status",
        created: "Utworzono",
        updated: "Zaktualizowano",
        lastLogin: "Ostatnie logowanie",
        notes: "Notatki",
      },
      a11y: {
        toggleDetails: "Pokaż/ukryj szczegóły",
      },
    },
  },
  en: {
    locale: "en-US",
    brand: "Exchange",
    navbar: { demo: "Demo mode", logout: "Log out" },
    sidebarSections: {
      CORE: "Core",
      DATA: "Data",
      TRADING: "Trading",
      ADMIN: "Admin",
    },
    menu: {
      EXCHANGE: "EXCHANGE",
      CUSTOMERS: "CUSTOMERS",
      ITEM: "ITEMS (GRAINS)",
      VENDORS: "VENDORS",
      BUY: "BUY",
      SELL: "SELL",
      USERS: "USERS",
      PARAMETERS: "PARAMETERS",
    },
    buy: {
      controls: {
        searchPlaceholder: "Search vendor, item, sku, description",
        allStatuses: "All statuses",
        statuses: {
          open: "Open",
          approved: "Approved",
          rejected: "Rejected",
          closed: "Closed",
        },
        searchBtn: "Search",
        newBtn: "New Buy Request",
        perPage: (n) => `${n} / page`,
        prev: "Prev",
        next: "Next",
      },
      table: {
        id: "ID",
        vendor: "Vendor",
        item: "Item",
        type: "Type",
        qty: "Qty (t)",
        price: "Price / t",
        status: "Status",
        created: "Created",
        description: "Description",
        actions: "",
        loading: "Loading...",
        empty: "No buy requests",
        typeMap: { spot: "spot", forward: "forward", tender: "tender" },
      },
      modal: {
        title: "Buy Request",
        cancel: "Cancel",
        save: "Save changes",
        create: "Create request",
        fields: {
          vendor: "Vendor *",
          vendorPlaceholder: "Select vendor…",
          item: "Item *",
          itemPlaceholder: "Select item…",
          type: "Type",
          quantity: "Quantity (tons)",
          price: "Price per ton (USD)",
          status: "Status",
          description: "Description",
        },
        statuses: {
          open: "open",
          approved: "approved",
          rejected: "rejected",
          closed: "closed",
        },
        types: { spot: "spot", forward: "forward", tender: "tender" },
      },
      alerts: {
        deleteConfirm: "Delete this request?",
        requestFailed: "Request failed",
        selectVendor: "Select a vendor",
        selectItem: "Select an item",
        typeRequired: "Type is required",
      },
      paginationMeta: (total, page, pages) =>
        `Total: ${total} • Page ${page} of ${pages || 1}`,
    },
    customers: {
      controls: {
        searchPlaceholder: "Search name, email, country, city",
        allStatuses: "All statuses",
        statuses: {
          active: "Active",
          suspended: "Suspended",
          closed: "Closed",
        },
        searchBtn: "Search",
        importCsv: "Import CSV",
        addBtn: "Add Customer",
        filters: "Filters",
      },
      table: {
        no: "No.",
        name: "Name",
        email: "Email",
        phone: "Phone",
        country: "Country",
        city: "City",
        customerType: "Customer type",
        blocked: "Blocked",
        creditLimit: "Credit limit",
        created: "Created",
        actions: "",
        loading: "Loading...",
        empty: "No customers found",
        dash: "—",
      },
      footer: {
        meta: (total, page, pages) =>
          `Total: ${total} • Page ${page} of ${pages || 1}`,
        perPage: (n) => `${n} / page`,
        prev: "Prev",
        next: "Next",
      },
      modal: {
        title: "Customer",
        cancel: "Cancel",
        save: "Save changes",
        add: "Add customer",
        tabs: {
          basics: "Basics",
          address: "Address",
          contact: "Contact",
          finance: "Finance & Codes",
          picture: "Picture",
        },
        fields: {
          no: "No. *",
          name: "Name *",
          name2: "Name 2",
          blocked: "Blocked",
          address: "Address",
          address2: "Address 2",
          city: "City",
          postCode: "Post code",
          region: "Region",
          countryRegionCode: "Country/Region code",
          phoneNo: "Phone No.",
          email: "Email",
          email2: "Email 2",
          homePage: "Home page",
          billToCustomerNo: "Bill-to Customer No.",
          nip: "NIP / Tax ID",
          creditLimit: "Credit limit",
          currencyCode: "Currency code",
          priority: "Priority",
          paymentMethodCode: "Payment method code",
          customerPostingGroup: "Customer posting group",
          customerPriceGroup: "Customer price group",
          languageCode: "Language code",
          paymentTermsCode: "Payment terms code",
          salespersonCode: "Salesperson code",
          shipmentMethodCode: "Shipment method code",
          shippingAgentCode: "Shipping agent code",
          customerDiscGroup: "Customer disc. group",
          picture: "Picture",
          customerType: "Customer type",
        },
      },
      alerts: {
        csvFail: "CSV import failed",
        deleteConfirm: "Delete this customer?",
        nameRequired: "Name is required",
      },
      blockedLabels: {
        none: "OK",
        ship: "SHIP",
        invoice: "INVOICE",
        all: "ALL",
      },
      details: {
        name2: "Name 2",
        address: "Address",
        address2: "Address 2",
        postCode: "Post code",
        region: "Region",
        nip: "NIP / Tax ID",
        email2: "Email 2",
        homePage: "Home page",
        billToCustomerNo: "Bill-to Customer No.",
        currencyCode: "Currency code",
        priority: "Priority",
        paymentMethodCode: "Payment method code",
        paymentTermsCode: "Payment terms code",
        languageCode: "Language code",
        customerPostingGroup: "Customer posting group",
        customerPriceGroup: "Customer price group",
        customerDiscGroup: "Customer disc. group",
        salespersonCode: "Salesperson code",
        shipmentMethodCode: "Shipment method code",
        shippingAgentCode: "Shipping agent code",
        picture: "Picture",
        noPicture: "No picture",
        customerType: "Customer type",
      },
      customerTypeLabels: {
        mlyn: "Mill",
        skup: "Procurement",
        trader: "Trader",
        wytwornia_pasz: "Feed Mill",
      },
    },

    exchange: {
      topbar: {
        lastUpdate: "Last update",
        nextIn: "Next refresh in",
        refreshNowTitle: "Refresh now",
        refresh: "Refresh",
        loading: "Loading…",
      },
      columns: {
        buyTitle: "BUY Requests",
        sellTitle: "SELL Requests",
        searchPlaceholderBuy: "Search vendor, item, SKU",
        searchPlaceholderSell: "Search customer, item, SKU",
        allStatuses: "All statuses",
        statuses: {
          open: "Open",
          approved: "Approved",
          rejected: "Rejected",
          closed: "Closed",
        },
        allItems: "All items",
        searchBtn: "Search",
        refreshBtn: "Refresh",
        headers: {
          id: "ID",
          partyBuy: "Vendor",
          partySell: "Customer",
          item: "Item",
          type: "Type",
          qty: "Qty (t)",
          price: "Price / t",
          status: "Status",
          created: "Created",
        },
        empty: "No results",
        footer: {
          meta: (total, page, pages) =>
            `Total: ${total} • Page ${page} of ${pages || 1}`,
          perPage: (n) => `${n} / page`,
          prev: "Prev",
          next: "Next",
        },
      },
      stats: { count: "Count", qty: "Qty (t)", notional: "Notional" },
    },
    items: {
      pageTitle: "Items",
      controls: {
        searchPlaceholder: "Search: No., description, UoM, posting group",
        searchBtn: "Search",
        addBtn: "Add Item",
        filters: "Filters",
        allTypes: "All types",
        allStatuses: "All statuses",
        statuses: { active: "Active", inactive: "Inactive" },
      },
      table: {
        no: "No.",
        no2: "No. 2",
        type: "Type",
        description: "Description",
        unit: "Base UoM",
        ipg: "Inventory Posting Group",
        unitPrice: "Unit Price",
        status: "Status",
        created: "Created",
        actions: "",
        loading: "Loading...",
        empty: "No items found",
        dash: "—",
      },
      details: {
        id: "ID",
        no: "No.",
        no2: "No. 2",
        type: "Type",
        description: "Description",
        description2: "Description 2",
        baseUnitOfMeasure: "Base Unit of Measure",
        inventoryPostingGroup: "Inventory Posting Group",
        unitPrice: "Unit Price",
        active: "Active",
        created: "Created",
        updated: "Updated",
      },
      footer: {
        meta: (total, page, pages) =>
          `Total: ${total} • Page ${page} of ${pages || 1}`,
        perPage: (n) => `${n} / page`,
        prev: "Prev",
        next: "Next",
      },
      modal: {
        titleNew: "Add Item",
        titleEdit: "Edit Item",
        cancel: "Cancel",
        save: "Save changes",
        add: "Add Item",
        fields: {
          no: "No. *",
          no2: "No. 2",
          type: "Type",
          description: "Description",
          description2: "Description 2",
          unit: "Base Unit of Measure",
          ipg: "Inventory Posting Group",
          unitPrice: "Unit Price",
          active: "Status",
        },
        required: "Please fill required fields.",
      },
      alerts: {
        loadFail: "Failed to load items.",
        deleteConfirm: "Delete this item?",
        deleted: "Item deleted.",
        requestFail: "Request failed.",
        created: "Item created.",
        updated: "Item updated.",
      },
      a11y: { toggleDetails: "Toggle details" },
    },
    parameters: {
      pageTitle: "Parameters",
      controls: {
        searchPlaceholder: "Search: code, description, type",
        searchBtn: "Search",
        addBtn: "Add Parameter",
        filters: "Filters",
        allTypes: "All types",
        types: { text: "text", decimal: "decimal", boolean: "boolean" },
      },
      table: {
        code: "Param. Code",
        description: "Description",
        type: "Param. Type",
        minValue: "Min Value",
        maxValue: "Max Value",
        defaultValue: "Default Value",
        primaryKey: "Primary Key",
        created: "Created",
        actions: "",
        loading: "Loading…",
        empty: "No parameters found",
        dash: "—",
      },
      modal: {
        titleNew: "Add Parameter",
        titleEdit: "Edit Parameter",
        cancel: "Cancel",
        save: "Save changes",
        add: "Add Parameter",
        fields: {
          code: "Param. Code *",
          description: "Description",
          type: "Param. Type",
          primaryKey: "Primary Key",
          minValue: "Min Value",
          maxValue: "Max Value",
          defaultValue: "Default Value",
        },
        typeOptions: { text: "text", decimal: "decimal", boolean: "boolean" },
        required: "Please fill required fields.",
      },
      alerts: {
        loadFail: "Failed to load parameters.",
        deleteConfirm: "Delete this parameter?",
        deleted: "Parameter deleted.",
        requestFail: "Request failed.",
        created: "Parameter created.",
        updated: "Parameter updated.",
        codeRequired: "Parameter code is required.",
      },
      footer: {
        meta: (total, page, pages) =>
          `Total: ${total} • Page ${page} of ${pages || 1}`,
        perPage: (n) => `${n} / page`,
        prev: "Prev",
        next: "Next",
      },
      a11y: { toggleDetails: "Toggle details" },
    },

    vendors: {
      controls: {
        searchPlaceholder: "Search vendor name, contact, email, city",
        countryPlaceholder: "Country code",
        regionPlaceholder: "Region",
        allStatuses: "All statuses",
        rrAll: "All vendors",
        rrOnly: "RR only",
        rrExclude: "Without RR",
        filters: "Filters",
        searchBtn: "Search",
        addBtn: "Add Vendor",
      },
      table: {
        no: "No.",
        name: "Name",
        email: "Email",
        phone: "Phone",
        country: "Country",
        city: "City",
        blocked: "Blocked",
        creditLimit: "Credit limit",
        created: "Created",
        actions: "",
        loading: "Loading…",
        empty: "No vendors found",
      },
      blockedLabels: {
        none: "OK",
        ship: "SHIP",
        invoice: "INVOICE",
        all: "ALL",
      },
      chips: {
        rrOnly: "RR only",
        rrExclude: "Without RR",
      },
      footer: {
        meta: (total, page, pages) =>
          `Total: ${total} • Page ${page} of ${pages || 1}`,
        perPage: (n) => `${n} / page`,
        prev: "Prev",
        next: "Next",
      },
      details: {
        name2: "Name 2",
        address: "Address",
        address2: "Address 2",
        postCode: "Post code",
        region: "Region",
        nip: "Tax ID",
        email2: "Email 2",
        homePage: "Home page",
        currencyCode: "Currency code",
        priority: "Priority",
        paymentMethodCode: "Payment method code",
        paymentTermsCode: "Payment terms code",
        languageCode: "Language code",
        vendorPostingGroup: "Vendor posting group",
        vendorPriceGroup: "Vendor price group",
        vendorDiscGroup: "Vendor disc. group",
        purchaserCode: "Purchaser code",
        shipmentMethodCode: "Shipment method code",
        shippingAgentCode: "Shipping agent code",
        rr: "RR",
        picture: "Picture",
        noPicture: "No picture",
      },
      modal: {
        title: "Vendor",
        cancel: "Cancel",
        save: "Save changes",
        add: "Add vendor",
        tabs: {
          basics: "Basics",
          address: "Address",
          contact: "Contact",
          finance: "Finance & Codes",
          picture: "Picture",
        },
        fields: {
          no: "No.",
          name: "Name *",
          name2: "Name 2",
          blocked: "Blocked",
          rr: "RR",
          address: "Address",
          address2: "Address 2",
          city: "City",
          postCode: "Post code",
          region: "Region",
          countryRegionCode: "Country/Region code",
          phoneNo: "Phone No.",
          email: "Email",
          email2: "Email 2",
          homePage: "Home page",
          nip: "Tax ID",
          creditLimit: "Credit limit",
          currencyCode: "Currency code",
          priority: "Priority",
          paymentMethodCode: "Payment method code",
          paymentTermsCode: "Payment terms code",
          languageCode: "Language code",
          vendorPostingGroup: "Vendor posting group",
          vendorPriceGroup: "Vendor price group",
          vendorDiscGroup: "Vendor disc. group",
          purchaserCode: "Purchaser code",
          shipmentMethodCode: "Shipment method code",
          shippingAgentCode: "Shipping agent code",
          picture: "Picture",
        },
      },
      alerts: {
        loadFail: "Failed to load vendors.",
        deleteConfirm: "Delete this vendor?",
        deleted: "Vendor deleted.",
        requestFail: "Request failed.",
        updated: "Vendor updated.",
        created: "Vendor created.",
        fixErrors: "Please correct the highlighted fields.",
      },
      labels: { yes: "Yes", no: "No" },
    },

// =================== ENGLISH ===================
sells: {
  locale: "en-US",
  title: "Sales Documents",
  searchPh: "Search: no., customer, location, broker…",
  addBtn: "New Document",
  filters: "Filters",
  all: "All statuses",
  status: "Status",
  documentNo: "Document No.",
  externalDocumentNo: "External Doc. No.",
  info: "Document Info",
  documentDate: "Document Date",
  dueDate: "Due Date",
  currency: "Currency",
  currencyFactor: "Currency Factor",
  sellTo: "Sell-to",
  billTo: "Bill-to",
  location: "Location",
  shipment: "Shipment",
  transport: "Transport",
  broker: "Broker",
  created: "Created",
  actions: "Actions",
  loading: "Loading…",
  empty: "No documents",
  requestFail: "Request failed",
  deleted: "Document deleted.",
  deleteConfirm: "Delete this document?",

  footer: {
    meta: (total, page, pages) => `Total: ${total} • Page ${page} of ${pages || 1}`,
    perPage: (n) => `${n} / page`,
    prev: "Prev",
    next: "Next",
  },

  statusMap: {
    new: "New",
    "on-hold": "On Hold",
    accepted: "Accepted",
    approved: "Approved",
    matched: "Matched",
    shipped: "Shipped",
    invoiced: "Invoiced",
    paid: "Paid (Closed)",
    canceled: "Canceled",
  },

  // Row details (expand panel)
  kv: {
    externalDocumentNo: "External Doc. No.",
    documentInfo: "Document Info",
    createdBy: "Created By",
    createdAt: "Created At",
    modifiedBy: "Modified By",
    modifiedAt: "Modified At",
    currency: "Currency",
    documentDate: "Document Date",
    serviceDate: "Service/Delivery Date",
    requestedDeliveryDate: "Requested Delivery",
    promisedDeliveryDate: "Promised Delivery",
    shipmentDate: "Shipment Date",
    dueDate: "Due Date",

    no: "No.",
    name: "Name",
    name2: "Name 2",
    address: "Address",
    address2: "Address 2",
    city: "City",
    region: "Region",
    postCode: "Post Code",
    country: "Country",
    email: "Email",
    phone: "Phone",
    nip: "Tax ID",

    method: "Method",
    agent: "Agent",

    transportNo: "Transport No.",
    transportName: "Transport Name",
    transportId: "Transport ID",
    driverName: "Driver Name",
    driverId: "Driver ID",
    driverEmail: "Driver Email",
    driverPhone: "Driver Phone",

    brokerNo: "Broker No.",
  },

  modal: {
    titleNew: "New Document",
    titleEdit: "Edit Document",
    cancel: "Cancel",
    save: "Save changes",
    add: "Create document",
  },

  alerts: {
    fixErrors: "Please correct the highlighted fields.",
  },

  form: {
    tabs: {
      header: "Header",
      sell: "Sell-to",
      bill: "Bill-to",
      location: "Location",
      shipment: "Shipment",
      transport: "Transport",
      broker: "Broker",
    },
    fields: {
      documentNo: "Document No. *",
      status: "Status",
      externalDocumentNo: "External Doc. No.",
      documentInfo: "Document Info",
      currencyCode: "Currency Code",
      currencyFactor: "Currency Factor",
      documentDate: "Document Date",
      serviceDate: "Service/Delivery Date",
      requestedDeliveryDate: "Requested Delivery Date",
      promisedDeliveryDate: "Promised Delivery Date",
      shipmentDate: "Shipment Date",
      validityDate: "Document Validity Date",
      dueDate: "Due Date",

      pickSell: "Pick Sell-to Customer *",
      pickBill: "Pick Bill-to Customer *",
      no: "No.",
      name: "Name",
      name2: "Name 2",
      email: "Email",
      phone: "Phone",
      address: "Address",
      address2: "Address 2",
      city: "City",
      region: "Region",
      postCode: "Post Code",
      country: "Country",
      nip: "Tax ID",

      shipmentMethod: "Shipment Method",
      shipmentAgent: "Shipment Agent",

      transportNo: "Transport No.",
      transportName: "Transport Name",
      transportId: "Transport ID",
      driverName: "Driver Name",
      driverId: "Driver ID",
      driverEmail: "Driver Email",
      driverPhone: "Driver Phone",

      brokerNo: "Broker No.",
    },
  },
},



    // i18n.jsx — REPLACE the whole T.en.users block with this
    users: {
      controls: {
        searchPlaceholder: "Search: name, code, email, phone, region",
        allStatuses: "All statuses",
        statuses: {
          active: "Active",
          suspended: "Suspended",
          closed: "Closed",
        },
        searchBtn: "Search",
        addBtn: "Add User",
      },
      table: {
        code: "Code",
        name: "Name",
        email: "Email",
        phone: "Phone",
        region: "Region",
        jobTitle: "Job Title",
        permission: "Permission",
        commission: "Commission",
        status: "Status",
        created: "Created",
        actions: "",
        loading: "Loading...",
        empty: "No users",
        dash: "—",
      },
      footer: {
        meta: (total, page, pages) =>
          `Total: ${total} • Page ${page} of ${pages || 1}`,
        perPage: (n) => `${n} / page`,
        prev: "Prev",
        next: "Next",
      },
      modal: {
        title: "User",
        cancel: "Cancel",
        save: "Save changes",
        add: "Create user",
        fields: {
          code: "Code *",
          name: "Name *",
          email: "Email *",
          password: "Password *",
          newPassword: "New password (optional)",
          phone: "Phone",
          commission: "Commission",
          region: "Region",
          jobTitle: "Job Title",
          permission: "Permission level",
          status: "Status",
        },
      },
      alerts: {
        deleteConfirm: "Delete this user?",
        required: "Code, name, email and password (for new user) are required",
        loadFail: "Failed to load users.",
        requestFail: "Request failed.",
        created: "User created.",
        updated: "User updated.",
        deleted: "User deleted.",
      },
      details: {
        id: "ID",
        phone: "Phone",
        region: "Region",
        jobTitle: "Job title",
        permission: "Permission",
        commission: "Commission",
        status: "Status",
        created: "Created",
        updated: "Updated",
        lastLogin: "Last login",
        notes: "Notes",
      },
      a11y: {
        toggleDetails: "Toggle details",
      },
    },
  },
};

const I18nContext = createContext({
  lang: "pl",
  setLang: () => {},
  t: T.pl,
  locale: T.pl.locale,
});

export function LangProvider({ children }) {
  const [lang, setLang] = useState(() => {
    const saved = localStorage.getItem("lang");
    return saved === "en" || saved === "pl" ? saved : "pl";
  });

  useEffect(() => {
    localStorage.setItem("lang", lang);
  }, [lang]);

  const value = useMemo(
    () => ({ lang, setLang, t: T[lang], locale: T[lang].locale }),
    [lang]
  );

  return <I18nContext.Provider value={value}>{children}</I18nContext.Provider>;
}

export function useI18n() {
  return useContext(I18nContext);
}

export function fmtNum(n, locale) {
  return Number(n || 0).toLocaleString(locale);
}
export function fmtMoney(n, locale, currency = "USD") {
  return (Number(n) || 0).toLocaleString(locale, {
    style: "currency",
    currency,
  });
}
